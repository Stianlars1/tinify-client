.card {
  //padding: 0.75rem 1rem;
  //padding: 5px 6px 5px 6px;
  padding: 0.75rem 1rem;
  border-top: 1px solid transparent;
  border-bottom: 1px solid HSL(var(--border));

  background-color: hsl(var(--card));
  @media screen and (-webkit-prefers-color-scheme: dark),
    screen and (prefers-color-scheme: dark) {
    background-color: hsl(var(--muted));
    border-bottom: 1px solid hsl(var(--muted-foreground) / 0.2);
  }
  //border-radius: var(--radius);

  height: fit-content;
  width: 100%;

  .progress {
    grid-column: 2 / -1;
    grid-row: 1;
    width: 100%; // or any specific width you need
    height: 0.2rem; // Ensure the progress bar has the height you want
    display: block; // Block element to ensure proper width and height control
    border: none; // Remove border if there is one
    padding: 0; // Reset any padding applied by the browser
    appearance: none; // Remove browser-specific styling
    border-radius: 9999px;

    background-color: hsl(0, 0%, 90%); // Background for the entire progress bar
    align-self: flex-end;
    &::-webkit-progress-bar {
      background-color: hsl(
        0,
        0%,
        90%
      ); // Background of the progress bar itself
      border-radius: 0.5rem; // Add border-radius if needed
    }

    &::-webkit-progress-value {
      background-color: hsl(
        var(--primary)
      ); // Color of the progress value (filled part)
      border-radius: 0.5rem; // Ensure border-radius on the filled part as well
      height: 100%; // Fill the entire height of the progress element
    }

    &::-moz-progress-bar {
      background-color: hsl(var(--primary)); // For Firefox
      border-radius: 0.5rem; // Ensure border-radius
      height: 100%; // Fill the entire height
    }
  }

  .progressError {
    background-color: hsl(var(--destructive));

    &::-webkit-progress-bar {
      background-color: hsl(var(--destructive));
    }
    &::-webkit-progress-value {
      background-color: hsl(var(--destructive));
    }

    &::-moz-progress-bar {
      background-color: hsl(var(--destructive));
    }
  }

  .loadingText {
    display: flex;
    align-items: center;
    text-align: center;
    gap: 0.5rem;
    .spinner {
    }
  }

  .compressCard {
    overflow: hidden;

    display: grid;
    grid-template-columns: 45px auto auto;
    grid-template-rows: auto;
    gap: 0.5rem;
    position: relative;

    .imageWrapper {
      grid-column: 1 / 2;
      grid-row: 1;
      width: 45px;
      height: 45px;
      overflow: hidden; /* Hide anything that overflows the container */
      display: flex;
      align-items: center;
      justify-content: center; /* Center the image inside the container */
      border-radius: calc(var(--radius) - 6px);
      border: 0.5px solid hsl(var(--border) / 0.8);
      .image {
        width: 100%;
        height: 100%;
        object-fit: cover; /* Ensures the image scales to cover the container while maintaining aspect ratio */
        object-position: center; /* Center the image within the container */
      }
    }

    .original {
      grid-column: 2 / 3;
      grid-row: 1;
      display: flex;
      min-width: 0;

      .originalInfo {
        display: flex;
        flex-direction: column;
        align-items: flex-start;
        justify-content: flex-start;
        min-width: 0;

        .originalTitle {
          font-size: 13px;
          min-width: 0;
          width: 100%;
          max-width: 200px;
          white-space: nowrap;
          text-overflow: ellipsis;
          overflow: hidden;

          &:hover {
            max-width: none;
            overflow: visible;
          }
        }

        .originalSpecs {
          display: flex;
          align-items: center;
          justify-content: center;
          gap: 0.5rem;
          .originalFormat {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            vertical-align: middle;
            place-items: center;
            font-size: 12px;
            font-weight: 600;
            padding: 2px 4px;
            background-color: hsl(var(--primary));
            color: hsl(var(--primary-foreground));
            border-radius: 4px;
          }
          .originalSize {
            font-size: 12px;
            color: hsl(var(--muted-foreground));
          }
        }
      }
    }

    .loadingText {
    }

    .compressed {
      grid-column: 3 / -1;
      grid-row: 1;
      display: flex;
      align-items: center;
      justify-content: flex-end;
      gap: 1rem;
      .compressedSpecs {
        .compressedPercent {
          font-size: 14px;
          display: inline-flex;
          align-items: center;
          justify-content: flex-end;
          font-weight: 600;

          gap: 0.5rem;

          .saved {
            padding: 0.1rem 0.5rem;
            background-color: hsl(var(--purple));
            color: hsl(var(--purple-foreground));
            border-radius: 999px;
            font-size: 12px;
            font-weight: 600;
          }

          .fireIconNative {
            display: none;
          }

          .skeletonLoading {
            display: flex;
            align-items: center;
            justify-content: center;
            place-content: center;
            text-align: center;
            font-size: 12px;
          }
        }
        .compressedSize {
          display: inline-flex;
          align-items: center;
          justify-content: flex-end;
          gap: 0.15rem;
          .bolt {
            color: hsl(var(--foreground));
            fill: hsl(var(--foreground));
            width: 14px;
          }
        }
      }

      // downlaod button - change color on downlaod click
      .hasDownloaded {
        background-color: hsl(var(--success));
        color: hsl(var(--black));
      }

      .downloadButtonText {
        display: flex;
      }
      .downloadButtonIconWrapper {
        display: none;
        .downloadButtonIcon {
          display: none;
        }
      }
    }

    .originalInfo,
    .compressedSpecs {
      display: flex;
      flex-direction: column;
      align-items: flex-start;
      justify-content: center;
      gap: 2px;
    }

    .compressedSpecs {
      align-items: flex-end;
    }

    .originalSize,
    .compressedSize {
      font-size: 12px;
      color: hsl(var(--muted-foreground));
      text-wrap: nowrap;
    }
    .compressErrorLabel {
      padding: 0.1rem 0.5rem;
      display: inline;
      background-color: hsl(var(--destructive));
      color: hsl(var(--destructive-foreground));
      border-radius: calc(var(--radius) - 4px);
      max-height: min-content;
      font-size: 1rem;
      align-self: center;
      justify-self: flex-end;
      width: fit-content;
    }
  }
}

@media screen and (max-width: 640px) {
  .card {
    .compressCard {
      .imageWrapper {
        width: 35px;
        height: 35px;
        .image {
        }
      }

      .original {
        .originalInfo {
          .originalTitle {
            max-width: 100px;

            &:hover {
              white-space: pre-wrap;
            }
          }
        }
      }

      .compressed {
        gap: 0.5rem;
        .compressedSpecs {
          .compressedPercent {
            gap: 0.25rem !important;
            .saved {
              position: relative;
              visibility: hidden;
              z-index: 0;
              &::after {
                visibility: visible;
                content: "saved";
                position: absolute;
                z-index: 100;
                top: 50%;
                right: 0;
                transform: translateY(-50%);

                padding: 0.1rem 0.5rem;
                background-color: hsl(var(--purple));
                color: hsl(var(--purple-foreground));
                border-radius: 999px;
                font-size: 12px;
                font-weight: 600;
              }
            }
          }
        }
      }
    }
  }
}
@media screen and (max-width: 500px) {
  .card {
    .compressCard {
      .imageWrapper {
        .image {
        }
      }

      .original {
        .originalInfo {
          .originalTitle {
          }
        }
      }

      .compressed {
        .compressedSpecs {
          .compressedPercent {
            .saved {
              display: none;
            }
            .fireIconNative {
              display: inline-block;
              width: 18px;
              height: 18px;
              fill: hsl(var(--primary));
              @media screen and (-webkit-prefers-color-scheme: dark),
                screen and (prefers-color-scheme: dark) {
                fill: hsl(var(--warning));
              }
            }
          }

          .compressedSize {
            .bolt {
              //display: none;
              fill: hsl(var(--foreground));
              color: hsl(var(--foreground));

              @media screen and (-webkit-prefers-color-scheme: dark),
                screen and (prefers-color-scheme: dark) {
                fill: hsl(var(--primary));
                color: hsl(var(--primary));
              }
            }
          }
        }
      }
    }
  }
}
@media screen and (max-width: 400px) {
  .card {
    .compressCard {
      .imageWrapper {
        .image {
        }
      }

      .original {
        .originalInfo {
          .originalTitle {
          }
        }
      }

      .compressed {
        .compressedSpecs {
          .compressedPercent {
            .saved {
              display: none;
            }
            .fireIconNative {
              display: inline-block;
              width: 18px;
              height: 18px;
              fill: hsl(var(--primary));
              @media screen and (-webkit-prefers-color-scheme: dark),
                screen and (prefers-color-scheme: dark) {
                fill: hsl(var(--warning));
              }
            }
          }

          .compressedSize {
            .bolt {
              //display: none;
              fill: hsl(var(--foreground));
              color: hsl(var(--foreground));
              @media screen and (-webkit-prefers-color-scheme: dark),
                screen and (prefers-color-scheme: dark) {
                fill: hsl(var(--primary));
                color: hsl(var(--primary));
              }
            }
          }
        }

        .downloadButtonText {
          display: none;
        }

        .downloadButtonIconWrapper {
          display: flex;
          position: relative;
          width: 100%;
          height: 100%;
          .downloadButtonIcon {
            display: flex;
            width: 1.5rem;
            fill: black;
            color: white;
            stroke: transparent;
            z-index: 10;
          }
          &::after {
            content: "";
            position: absolute;
            inset: 5px;
            border-radius: 100%;
            background-color: hsl(var(--white));
            @media screen and (-webkit-prefers-color-scheme: dark),
              screen and (prefers-color-scheme: dark) {
              background-color: hsl(var(--white));
            }
            z-index: 0;
          }
        }
      }
    }
  }
}

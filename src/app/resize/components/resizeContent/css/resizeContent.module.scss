.resize {
  position: relative;
  z-index: 10;
  min-width: 100%;
}

.resizeContent {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;

  padding-top: 40px;
  gap: 1rem;

  z-index: 100;
}

.resizePreviewContainer {
  flex: 1 0 auto;
  position: relative;
  width: fit-content;
  height: fit-content;
  padding: 2rem;
  box-sizing: content-box;
  margin: auto;
  perspective: preserve-3d;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 1rem;
  background-color: hsl(var(--card));
  border: 1px solid hsl(var(--input));

  border-radius: var(--radius);

  --ring-shadow: 0 0 #0000;
  --ring-offset-shadow: 0 0 #0000;
  --shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px -1px rgba(0, 0, 0, 0.1);
  --shadow-colored: 0 1px 2px 0 var(--shadow-color);

  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
    var(--ring-shadow, 0 0 #0000), var(--shadow);

  box-sizing: border-box;

  .resizePreviewWrapper {
    width: 200px;
    height: 200px;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;

    .resizePreviewImage {
      position: absolute;
      margin: auto;
      border-radius: 4px;
      border: 1px solid hsl(var(--muted-foreground) / 0.2);
      border-style: inline;
      overflow: hidden;
      --ring-shadow: 0 0 #0000;
      --ring-offset-shadow: 0 0 #0000;
      --shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1),
        0 1px 2px -1px rgba(0, 0, 0, 0.1);
      --shadow-colored: 0 1px 2px 0 var(--shadow-color);

      box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
        var(--ring-shadow, 0 0 #0000), var(--shadow);

      object-fit: cover; /* Ensures the image scales to cover the container while maintaining aspect ratio */
      object-position: center; /* Center the image within the container */
      background-color: hsl(var(--background));
    }

    .firstImage {
      opacity: 1;
      z-index: 1;
      left: 50%;
      top: 50%;
      transform: translateX(-50%) translateY(-50%) scale(1);
    }

    .secondImage {
      opacity: 1;
      z-index: 0;

      left: 70%;
      top: 30%;
      transform: translateX(-70%) translateY(-30%) scale(0.95);
    }

    .thirdImage {
      opacity: 1;
      z-index: -1;

      left: 90%;
      top: 10%;
      transform: translateX(-90%) translateY(-10%) scale(0.9);
    }
  }

  .imageNames {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    gap: 4px;
    .imageName {
      font-size: 14px;
      color: hsl(var(--muted-foreground));
      display: inline-flex;
      align-items: center;
      list-style-type: none;
      gap: 0.5rem;

      .fromSizeTag,
      .toSizeTag {
        padding: 0.1rem 0.3rem;
        border-radius: 999px;
        display: flex;
        align-items: center;
        flex-wrap: nowrap;
        justify-content: center;

        font-size: 12px;
        font-weight: 400;
        white-space: nowrap;
        text-wrap: nowrap;
      }
      .fromSizeTag {
        background-color: hsl(var(--muted));
        color: hsl(var(--muted-foreground));
      }
      .toSizeTag {
        background-color: hsl(var(--primary));
        color: hsl(var(--white));
      }
    }
  }
}

.arrowRight {
  transform: rotate(-90deg);
  width: 3rem;
  flex: 0 0 3rem;
}

.showHideImageNamesButton {
  border: 0;
  border-bottom: 1px solid hsl(var(--border));
  cursor: pointer;
  background-color: transparent;
}

@media screen and (max-width: 768px) {
  .resizeContent {
    flex-direction: column;
    gap: 1.5rem;
    .resizePreviewContainer {
      padding: 1rem 2rem;
      gap: 0.5rem;
      width: 75%;
      .resizePreviewWrapper {
        width: 180px;
        height: 180px;
        .firstImage {
          left: 50%;
          top: 90%;
          transform: translateX(-50%) translateY(-90%) scale(1);
        }

        .secondImage {
          left: 70%;
          top: 70%;
          transform: translateX(-70%) translateY(-70%) scale(0.95);
        }

        .thirdImage {
          left: 90%;
          top: 50%;
          transform: translateX(-90%) translateY(-50%) scale(0.9);
        }
      }
    }
  }

  .arrowRight {
    transform: rotate(0);
  }

  .headerHidden {
    padding-top: 0;
  }
}
@media screen and (max-width: 640px) {
  .resizeContent {
    .resizePreviewContainer {
      width: 100%;
    }
  }
}
